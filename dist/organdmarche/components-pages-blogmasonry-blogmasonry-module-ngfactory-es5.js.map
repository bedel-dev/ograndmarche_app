{"version":3,"sources":["webpack:///src/app/components/pages/blogmasonry/blogmasonry-routing.module.ts","webpack:///src/app/components/pages/blogmasonry/blogmasonry.component.html","webpack:///src/app/components/pages/blogmasonry/blogmasonry.module.ts","webpack:///src/app/components/pages/blogmasonry/content/content.component.ts","webpack:///src/app/components/pages/blogmasonry/blogmasonry.component.ts","webpack:///src/app/components/pages/blogmasonry/content/content.component.html"],"names":["routes","path","component","BlogmasonryRoutingModule","BlogmasonryModule","ContentComponent","produitServices","page","blogbox","tags","prix","title","id","count","tableSize","tableSizes","ListProduits","LocalListeProduit","cultureliste","villeliste","lastville","lastculture","items","elems","filter","item","includes","GetAllProduit","GetAllProduitPrix","subscribe","result","data","forEach","element","push","culture","libelle","length","ville","type","console","log","target","value","event","BlogmasonryComponent","instaclassname","classname","ftlogo"],"mappings":"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","file":"components-pages-blogmasonry-blogmasonry-module-ngfactory-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { BlogmasonryComponent } from './blogmasonry.component';\n\nconst routes: Routes = [{ path: '', component: BlogmasonryComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes),  ],\n  exports: [RouterModule]\n})\nexport class BlogmasonryRoutingModule { }\n","<app-headertwo></app-headertwo>\n<app-breadcrumbs></app-breadcrumbs>\n<app-content></app-content>\n<app-footer [layout]=\"classname\" [logo]=\"ftlogo\"></app-footer>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgMasonryGridModule } from 'ng-masonry-grid';\nimport { NgxPaginationModule } from 'ngx-pagination';\n\nimport { BlogmasonryRoutingModule } from './blogmasonry-routing.module';\nimport { BlogmasonryComponent } from './blogmasonry.component';\n\nimport { SharedModule } from '../../shared/shared.module';\nimport { ContentComponent } from './content/content.component'\n\n@NgModule({\n  declarations: [BlogmasonryComponent, ContentComponent],\n  imports: [\n    CommonModule,\n    BlogmasonryRoutingModule,\n    NgbModule,\n    NgMasonryGridModule,\n    NgxPaginationModule,\n    SharedModule\n  ]\n})\nexport class BlogmasonryModule { }\n","import { Component, OnInit } from '@angular/core';\nimport blogpost from '../../../../data/blog.json';\nimport blogtags from '../../../../data/blogtags.json';\nimport { ProduitService } from 'src/app/services/produits/produit.service';\n\n@Component({\n  selector: 'app-content',\n  templateUrl: './content.component.html',\n  styleUrls: ['./content.component.css']\n})\nexport class ContentComponent implements OnInit {\n  // pagination\n  page: number = 1;\n  constructor(public produitServices:ProduitService    ) { }\n  public blogbox: { title: string, id: number }[] = blogpost;\n  public tags: { title: string, id: number }[] = blogtags;\n  public getBlogTags(items: string | any[]) {\n    var elems = blogtags.filter((item: { id: string; }) => {\n      return items.includes(item.id)\n    });\n    return elems;\n  }\n  prix = [\n    {\n      title: 'Prix',\n      id: 1\n    },\n  ]\n  count:number =0\n  tableSize:number = 10\n  tableSizes:any =[5,10,15,20]\n  ngOnInit(): void {\n    this.GetAllProduit()\n  }\n  ListProduits:any[] = []\n  LocalListeProduit:any=[]\n  cultureliste:any=[]\n  villeliste:any=[]\n  GetAllProduit(){\n    this.produitServices.GetAllProduitPrix().subscribe((result:any)=>{\n\n      result.data.forEach(element => {\n        this.ListProduits.push(element);\n        this.LocalListeProduit.push(element);\n       // console.log(element.libelle)\n\n    var culture =  this.cultureliste.filter(item => {\n          return item ===element.libelle\n        });\n    //  / console.log(culture)\n      if(culture.length==0){\n        this.cultureliste.push(element.libelle);\n      }\n\n\n      var ville =  this.villeliste.filter(item => {\n        return item ===element.ville\n      });\n  //  / console.log(culture)\n    if(ville.length==0){\n      this.villeliste.push(element.ville);\n    }});\n    })\n  }\n  lastville=\"\";\n  lastculture=\"\";\n  FilterTable(data,type){\n    this.ListProduits  =  [];\n    console.log(data.target.value,type)\n    this.LocalListeProduit.forEach(element => {\n      if(type==\"culture\"){\n      //  console.log(element.libelle,data.target.value)\n\n        if(element.libelle ==data.target.value){\n          this.ListProduits.push(element);\n        }\n        // if(this.lastville ==\"\"){\n        //   if(element.libelle ==data.target.value){\n        //     this.ListProduits.push(element);\n        //   }\n        // }else{\n        //   this.lastculture == data.target.value\n        //   if(element.libelle ==data.target.value&&element.ville ==this.lastville){\n        //     this.ListProduits.push(element);\n        //   }\n        // }\n      }\n\n      if(type==\"ville\"){\n        if(element.ville ==data.target.value){\n          this.ListProduits.push(element);\n        }\n        // this.lastville == data.target.value\n        // if(this.lastculture  ==\"\"){\n        //   if(element.ville ==data.target.value){\n        //     this.ListProduits.push(element);\n        //   }\n        // }else{\n        //   if(element.ville ==data.target.value&&element.libelle == this.lastculture) {\n        //     this.ListProduits.push(element);\n        //   }\n        // }\n      }\n    });\n  }\n  onTableDataChange(event:any){\n    this.page=event\n  }\n  onTableSizeChange(event:any):void{\n    this.tableSize = event.target.value\n    this.page=1\n    this.GetAllProduit()\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-blogmasonry',\n  templateUrl: './blogmasonry.component.html',\n  styleUrls: ['./blogmasonry.component.css']\n})\nexport class BlogmasonryComponent implements OnInit {\n  // Instagram\n  instaclassname = \"secondary-bg\";\n  // Footer style\n  classname = \"\";\n  ftlogo = \"assets/img/logo_ready.png\"\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Blog Posts Start -->\n<div class=\"section\">\n    <div class=\"container\">\n        <!-- \n                <ng-masonry-grid [masonryOptions]=\"{ transitionDuration: '0.8s', percentPosition: true }\" [useAnimation]=\"true\"\n            [useImagesLoaded]=\"true\" class=\"rows masonrys\">\n      \n                 <article class=\"andro_post\">\n                    <div class=\"andro_post-thumb\">\n                        <a routerLink=\"/post-single/{{item.id}}\">\n                            <img src=\"{{item.masonryphoto}}\" alt=\"{{item.title}}\">\n                        </a>\n                    </div>\n                    <div class=\"andro_post-body\">\n                        <div class=\"andro_post-categories\">\n                            <a href=\"#\" *ngFor=\"let tags of getBlogTags(item.tags)\">{{tags.title}}</a>\n                        </div>\n                        <div class=\"andro_post-desc\">\n                            <h5> <a routerLink=\"/post-single/{{item.id}}\">{{item.title}}</a> </h5>\n                            <span> <span class=\"fw-600\">Posted On </span> <a routerLink=\"/post-single/{{item.id}}\"\n                                    class=\"andro_post-date\">{{item.postdate}}</a> </span>\n                            <p>{{item.shortdesc}}</p>\n                        </div>\n                        <a class=\"andro_btn-custom btn-block\" routerLink=\"/post-single/{{item.id}}\"> Read More\n                        </a>\n                    </div>\n                </article>\n\n                <ng-masonry-grid-item   style=\"width: 100%; position: inherit !important; top: 10%!important;\" class=\"masonry-item\">\n       \n                </ng-masonry-grid-item>\n            </ng-masonry-grid>\n        -->\n        <div>\n            <hr>    \n            <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <div class=\"form-group\">\n                            <label for=\"orderIdFilter\">Sélectionnez  une culture</label>\n                                <select   style=\"border: 2px solid #c7d1d6;\" id=\"orderIdFilter\"    (change)=\"FilterTable($event,'culture')\" type=\"text\" class=\"form-control order-search-box ng-pristine ng-untouched ng-valid ng-empty\" placeholder=\"Sélectionnez  une culture\" ng-model=\"code\" filter-by=\"code\" filter-type=\"text\">\n                                    <option  disabled value=\"null\">Sélectionnez  une culture</option>\n                                    <option  *ngFor=\"let item of  cultureliste\" value={{item}}> {{item}}</option>\n                                </select>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6\">\n                        <div class=\"form-group\">\n                            <label for=\"orderIdFilter\">Sélectionnez  une ville </label>\n                            <select style=\"border: 2px solid #c7d1d6;\"  (change)=\"FilterTable($event,'ville')\" id=\"orderIdFilter\" type=\"text\" class=\"form-control order-search-box ng-pristine ng-untouched ng-valid ng-empty\" placeholder=\"Sélectionnez  une ville\" ng-model=\"code\" filter-by=\"code\" filter-type=\"text\">\n                                <option  disabled value=\"null\">Sélectionnez  une ville</option>\n                                <option  *ngFor=\"let item of  villeliste\" value={{item}}> {{item}}</option>\n\n                            </select>                            \n                        </div>\n                    </div>\n            </div>\n            <hr>    \n\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <table class=\"table table-bordered table-striped\">\n                        <thead>\n                        <tr>\n                            <th>\n                                Culture\n                            </th>\n                            <th>\n                                Catégorie\n                            </th>\n                            <th>\n                            Type de produit\n                            </th>\n                            <th >\n                                Prix en  gros\n                            </th>\n                            <th>\n                                Prix en  detail\n                            </th>\n                            <th>\n                                Ville\n                            </th>\n                            <th>\n                                Region\n                            </th>\n                            <th >\n                                Unité\n                            </th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        <tr *ngFor=\"let item of ListProduits | paginate: { itemsPerPage: 5, currentPage: page,totalItems:count}; let i=index\">\n                            <td> {{item.libelle}} </td>\n                            <td> {{item.categorieprod}}</td>\n                            <td> {{item.typeprod}}</td>\n                            <td>{{item.prixgros}} FCFA</td>\n                            <td> {{item.prixdetail}} FCFA</td>\n                            <td> {{item.ville}}</td>\n                            <td>{{item.region}}</td>\n                            <td> {{item.unite}}</td>\n                        </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n              <div class=\"d-flex justify-content-between p-2\">\n                <div>\n                    <pagination-controls previousLabel=\"Prev\" nextLabel=\"Next\"(pageChange)=\"onTableDataChange($event)\" ></pagination-controls>\n                  </div>\n              </div> \n        </div>\n    </div>\n</div>\n<!-- Blog Posts End -->"]}