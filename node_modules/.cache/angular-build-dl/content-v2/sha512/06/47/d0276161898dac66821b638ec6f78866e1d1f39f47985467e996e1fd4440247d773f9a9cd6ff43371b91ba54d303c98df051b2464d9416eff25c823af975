{"version":3,"sources":["webpack:///src/app/components/pages/register/register.module.ts","webpack:///src/app/components/pages/register/register.component.html","webpack:///src/app/components/pages/register/register-routing.module.ts","webpack:///src/app/components/pages/register/content/content.component.ts","webpack:///src/app/components/pages/register/content/content.component.html","webpack:///src/app/components/pages/register/register.component.ts"],"names":["RegisterModule","routes","path","component","RegisterRoutingModule","ContentComponent","http","router","imagurl","host","isInvalid","phoneNumber","cssClass","phoneNumberChange","onFocus","undefined","getCode","iti","getSelectedCountryData","dialCode","onBlur","trim","isValidNumber","onInputKeyPress","event","allowedChars","allowedCtrlChars","allowedOtherKeys","test","key","ctrlKey","includes","preventDefault","onPhoneNumberChange","selectedCountryCode","emit","data","fire","showLoading","getDenyButton","pass","name","phone","email","localite","match","password","passwordsecond","console","log","length","icon","title","text","showConfirmButton","timer","user","String","headers","append","body","JSON","stringify","post","api_auth","subscribe","res","navigate","telInput","nativeElement","utilsScript","nationalMode","formatOnDisplay","initialCountry","separateDialCode","changes","destroy","intlTelInputUtils","currentText","getNumber","numberFormat","E164","setNumber","RegisterComponent","instaclassname","classname","ftlogo"],"mappings":"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","file":"components-pages-register-register-module-ngfactory-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { RegisterRoutingModule } from './register-routing.module';\nimport { RegisterComponent } from './register.component';\n\nimport { SharedModule } from '../../shared/shared.module';\nimport { ContentComponent } from './content/content.component'\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\n\n// import { NgxIntlTelInputModule } from 'ngx-intl-tel-input';\n\n\n@NgModule({\n  declarations: [RegisterComponent, ContentComponent],\n  imports: [\n    CommonModule,\n    RegisterRoutingModule,\n    SharedModule,\n    FormsModule,\n    HttpClientModule,\n\n\n  ]\n})\nexport class RegisterModule { }\n","<app-headertwo></app-headertwo>\n<app-content></app-content>\n <!--<app-instagram [layout]=\"instaclassname\"></app-instagram>-->\n<app-footer [layout]=\"classname\" [logo]=\"ftlogo\"></app-footer>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegisterComponent } from './register.component';\n\nconst routes: Routes = [{ path: '', component: RegisterComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RegisterRoutingModule { }\n","import { Component, EventEmitter, Input, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { GlobalConstants } from '../../../../common/global-constants';\nimport intlTelInput from 'intl-tel-input';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-content',\n  templateUrl: './content.component.html',\n  styleUrls: ['./content.component.css']\n})\nexport class ContentComponent implements OnInit {\n\n  constructor(private http: HttpClient,private router: Router) { }\n\n  iti;\n  selectedCountryCode;\n  public imagurl  = GlobalConstants.host+\"/img/produit_image/\"\n  isInvalid = false;\n  ngOnInit(): void {\n  }\n  // do inscription\n  onClickSubmit(data) {\n    Swal.fire('Patientez svp!!!')\n    Swal.showLoading(Swal.getDenyButton())\n    var pass = '123';\n    var name = data.name;\n    var phone = data.phone;\n    var email = data.email;\n    var localite = data.localite;\n    var match = true;\n    if(email ==''){\n      email='lidardefaultmail@lidar.ci'\n    }\n    if(data.password === data.passwordsecond){\n       pass = data.password;\n       console.log(phone.length);\n      if(this.phoneNumber.length === 10){\n        match = true;\n        console.log(\"good nember\");\n        var getCode = this.iti.getSelectedCountryData().dialCode;\n        this.phoneNumber = \"+\"+getCode+\" \"+this.phoneNumber\n        console.log(this.phoneNumber);\n\n      }else{\n        match = false;\n        Swal.fire({\n          icon: 'warning',\n          title: 'Entrez un contact de 10 chiffre!',\n          text:  '',\n          showConfirmButton: true,\n          timer: 2000\n        });\n      }\n    }else{\n      match = false;\n      Swal.fire({\n        icon: 'warning',\n        title: 'Entrez le meme mot de passe!',\n        text: 'Entrez le meme mot de passe!',\n        showConfirmButton: true,\n        timer: 2000\n      });\n    }\n\n   if(!match) return;\n   let user = {\n    \"name\":name,\n    \"contact\":String(this.phoneNumber),\n    \"email\":email,\n    \"locality\":localite,\n    \"user_type\":\"AGENCE\",\n    \"username\":email,\n    \"password\":pass,\n    \"role\":\"gpublic\",\n    \"CoustumerID\":\"\",\n    \"localisation\":\"CI\",\n    \"urlprofile\":\"avatar.png\"\n    }\n    const headers = new HttpHeaders()\n   .append(\n     'Content-Type',\n     'application/json'\n   );\n   const body=JSON.stringify(user);\n   console.log(user)\n   this.http\n     .post(GlobalConstants.api_auth+'/add.json', body, {\n       headers: headers,\n     })\n    .subscribe((res) =>{\n     console.log(res);\n    if(res['response']['code'] === \"200\"){\n     Swal.fire({\n      icon: 'success',\n      title: 'Bienvenue',\n      text: 'Inscription reussie!',\n      showConfirmButton: true,\n      timer: 2000\n    });\n    this.router.navigate(['/login']);\n    }else if(res['response']['code'] === \"402\"){\n      Swal.fire({\n        icon: 'error',\n        title: 'Inscription refusé!',\n        text: 'Cet Numero est deja utilisé!',\n        showConfirmButton: true,\n        timer: 2000\n      });\n      this.phoneNumber =\"\"\n    }else{\n     //this.alertConfirmation()\n     Swal.fire({\n      icon: 'error',\n      title: 'Inscription refusé!',\n      text: 'veuillez verifier votre connexion internet!',\n      showConfirmButton: true,\n      timer: 2000\n    });\n    this.phoneNumber =\"\"\n    }\n    }\n   );\n  }\n\n\n  @ViewChild('telInput') telInput;\n  @Input() phoneNumber = '';\n  @Input() cssClass = 'form-control';\n  @Output() phoneNumberChange = new EventEmitter<string>();\n  ngAfterViewInit(){\n    // const input = document.querySelector(\"#\" + this.inputId);\n    this.iti = intlTelInput(this.telInput.nativeElement, {\n        utilsScript: \"assets/scripts/utils.js\",\n        // initialCountry: \"auto\",\n        nationalMode: false,\n        formatOnDisplay: true,\n        initialCountry:'ci',\n        separateDialCode:true\n\n\n    });\n    this.selectedCountryCode = this.iti.getSelectedCountryData().dialCode;\n}\nngOnChanges(changes: SimpleChanges) {\n\n}\nngOnDestroy(){\n    this.iti.destroy();\n}\n\nonFocus = () =>{\n    if(this.phoneNumber == undefined || this.phoneNumber == \"\"){\n        var getCode = this.iti.getSelectedCountryData().dialCode;\n       // this.phoneNumber = \"+\" + getCode;\n        this.phoneNumber = \"\";\n\n    }\n}\n\nonBlur = ()=>{\n    this.isInvalid = false;\n    if(this.phoneNumber != undefined && this.phoneNumber.trim()){\n        if(this.iti.isValidNumber()){\n            this.isInvalid = false;\n        }\n        else{\n            this.isInvalid = true;\n        }\n    }\n}\n\nonInputKeyPress = (event: KeyboardEvent) =>{\n    const allowedChars = /[0-9\\+\\-\\ ]/;\nconst allowedCtrlChars = /[axcv]/; // Allows copy-pasting\nconst allowedOtherKeys = [\n  'ArrowLeft',\n  'ArrowUp',\n  'ArrowRight',\n  'ArrowDown',\n  'Home',\n  'End',\n  'Insert',\n  'Delete',\n  'Backspace',\n];\n\nif (\n  !allowedChars.test(event.key) &&\n  !(event.ctrlKey && allowedCtrlChars.test(event.key)) &&\n  !allowedOtherKeys.includes(event.key)\n) {\n  event.preventDefault();\n}\n}\n\nformatIntlTelInput() {\n    if (typeof intlTelInputUtils !== 'undefined') { // utils are lazy loaded, so must check\n        var currentText = this.iti.getNumber(intlTelInputUtils.numberFormat.E164);\n        if (typeof currentText === 'string') { // sometimes the currentText is an object :)\n            this.iti.setNumber(currentText); // will autoformat because of formatOnDisplay=true\n        }\n    }\n}\n\nonPhoneNumberChange = () =>{\n    this.selectedCountryCode = this.iti.getSelectedCountryData().dialCode;\n    // this.formatIntlTelInput();\n    this.phoneNumberChange.emit(this.phoneNumber);\n}\n}\n","<div class=\"section\">\n    <div class=\"imgs-wrapper\">\n       <!--  <img src=\"assets/img/products/1.png\" alt=\"veg\" class=\"d-none d-lg-block\">\n        <img src=\"assets/img/products/14.png\" alt=\"veg\" class=\"d-none d-lg-block\">-->\n    </div>\n    <div class=\"container\">\n        <div class=\"andro_auth-wrapper\">\n            <div class=\"andro_auth-description bg-cover bg-center dark-overlay dark-overlay-2\" style=\"background-image: url({{imagurl}}login-bg.jpeg)\">\n                <div class=\"andro_auth-description-inner\">\n                  <!--  <i class=\"flaticon-diet\"></i> -->\n                  <h2>Bienvenue !</h2>\n                    <p>Ogrand marché redefinir l'agriculture.</p>\n                </div>\n            </div>\n            <div class=\"andro_auth-form\">\n                <h2>Inscrivez vous</h2>\n                <form #userSave = \"ngForm\" (ngSubmit) = \"onClickSubmit(userSave.value)\">\n                    <div class=\"form-group\">\n                      <input type=\"text\" class=\"form-control\" placeholder=\"Nom & prenom\" name=\"name\" value=\"\" ngModel>\n                  </div>\n                    <div class=\"form-group txt\">\n                        <input style=\"padding-right: 125px !important;\"\n                        class=\"form-control\"\n                         placeholder=\"numero de telephone\"\n                         name=\"phone\"\n                         value=\"\"\n                         #telInput\n                         (focus)=\"onFocus()\"\n                         (blur)=\"onBlur()\"\n                         (keypress)=\"onInputKeyPress($event)\"\n                         [(ngModel)]=\"phoneNumber\"\n                         (ngModelChange)=\"onPhoneNumberChange()\"\n                          ngModel>\n                    </div>\n                    <div class=\"form-group\">\n                        <input type=\"email\" class=\"form-control form-control-light\" placeholder=\"Email\" name=\"email\" value=\"\" ngModel>\n                    </div>\n                    <div class=\"form-group\">\n                      <input type=\"localite\" class=\"form-control form-control-light\" placeholder=\"localite\" name=\"localite\" value=\"\" ngModel>\n                    </div>\n                    <div class=\"form-group\">\n                      <input type=\"password\" class=\"form-control\" placeholder=\"Mot de passe\" name=\"password\" value=\"\" ngModel>\n                  </div>\n                    <div class=\"form-group\">\n                        <input type=\"password\" class=\"form-control\" placeholder=\"Ressaisissez le mot de passe\" name=\"passwordsecond\" value=\"\" ngModel>\n                    </div>\n                    <button style=\"margin-bottom: 10px;\"  type=\"submit\" class=\"andro_btn-custom primary\">Inscription</button>\n                 <!--    <div class=\"andro_auth-seperator\">\n                        <span>ou</span>\n                    </div>\n                   <div class=\"andro_social-login\">\n                        <button type=\"button\" class=\"andro_social-login-btn facebook\"><i class=\"fab fa-facebook-f\"></i> Continue with Facebook </button>\n                        <button type=\"button\" class=\"andro_social-login-btn google\"><i class=\"fab fa-google\"></i> Continue with Google</button>\n                    </div>-->\n                    <p>Avez vous deja un compte?  <a routerLink=\"/login\">Connectez vous</a> </p>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  // Instagram\n  instaclassname = \"secondary-bg\";\n  // Footer style\n  classname = \"\";\n  ftlogo = \"assets/img/logo_ready.png\"\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n"]}