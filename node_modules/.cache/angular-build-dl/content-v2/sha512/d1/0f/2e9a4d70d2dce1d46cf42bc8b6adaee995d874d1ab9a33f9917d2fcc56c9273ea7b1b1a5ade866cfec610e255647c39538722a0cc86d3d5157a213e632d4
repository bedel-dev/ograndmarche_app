{"version":3,"sources":["webpack:///node_modules/ngx-slick-carousel/ngx-slick-carousel.d.ts.SlickCarouselComponent.html","webpack:///src/app/components/shared/dealslider/dealslider.component.html","webpack:///src/app/components/shared/dealslider/dealslider.component.ts"],"names":["DealsliderComponent","produitService","navigate","item","imagurl","host","newItemEvent","shopbox","dealsConfig","slidesToShow","slidesToScroll","arrows","dots","dotsClass","autoplay","responsive","breakpoint","settings","allproductionconso","getProductRecent","GetAllProduit","subscribe","res","produits","data","forEach","element","description","toString","includes","splitdescription","split","label","console","log","push","value","emit"],"mappings":"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","file":"default~components-pages-homethree-homethree-module-ngfactory~components-pages-productsingletwo-prod~64131587-es5.js","sourcesContent":["<ng-content></ng-content>","<ngx-slick-carousel #slickModal=\"slick-carousel\" [config]=\"dealsConfig\" class=\"deals-slider\">\n    <!-- Deal Start -->\n    <div ngxSlickItem class=\"andro_product\" *ngFor=\"let item of allproductionconso | slice:0:3\">\n          <!-- Deal Start\n        <div class=\"andro_product-badge andro_badge-featured\" *ngIf=\"item.featured\">\n            <i class=\"fa fa-star\"></i>\n            <span>Featured</span>\n        </div>-->\n        <div class=\"andro_product-badge andro_badge-sale\" *ngIf=\"item.discount\">\n            {{item.discount}}% Off\n        </div>\n        <div class=\"andro_product-thumb\">\n            <a (click)=\"addNewItem(item.id)\" routerLink=\"/product-single-v2/{{item.id}}\"><img src=\"{{imagurl}}/{{item.urlImageVente}}\"alt=\"{{item.description}}\"></a>\n                <!-- Deal Start\n            <div class=\"andro_countdown-timer\">\n                <countdown #cd [config]=\"{leftTime: item.created_at}\"></countdown>\n            </div>-->\n        </div>\n        <div class=\"andro_product-body\">\n            <h5 class=\"andro_product-title\"> <a (click)=\"addNewItem(item.id)\" routerLink=\"/product-single-v2/{{item.id}}\"> {{item.description}} </a></h5>\n            <p>{{item.description}}</p>\n                <!-- Deal Start\n\n            <div class=\"andro_rating-wrapper\">\n                <div class=\"andro_rating\">\n                    <ngb-rating [max]=\"5\" [(rate)]=\"item.rating\" [readonly]=\"true\">\n                        <ng-template let-fill=\"fill\" let-index=\"index\">\n                            <i class=\"fa fa-star\" [class.active]=\"fill === 100\"></i>\n                        </ng-template>\n                    </ngb-rating>\n                </div>\n                <span>{{item.rating}} Stars</span>\n            </div>-->\n\n        </div>\n        <div class=\"andro_product-footer\">\n            <div class=\"andro_product-price\">\n                <span *ngIf=\"item.discount\">${{item.price * (100 - item.discount) / 100 |\n                    number:'1.2-2'}}</span>\n                <span>{{item.prix| number:'1.2-2'}} Fr<span *ngIf=\"item.typeVente ==='Produit consommable'|| item.typeVente ==='Intrant'\">/ Kg</span></span>\n            </div>\n            <button (click)=\"addNewItem(item.id)\" routerLink=\"/product-single-v2/{{item.id}}\" class=\"andro_btn-custom btn-sm\">Detail</button>\n        </div>\n    </div>\n    <!-- Deal End -->\n</ngx-slick-carousel>\n","import { Component, Input, OnInit } from '@angular/core';\nimport shoppost from '../../../data/shop.json'\nimport { ProduitService } from '../../../services/produits/produit.service';\nimport { GlobalConstants } from 'src/app/common/global-constants';\nimport { Prodruit } from 'src/app/data/prodruits';\nimport { Router } from '@angular/router';\nimport { Output, EventEmitter } from '@angular/core';\n@Component({\n  selector: 'app-dealslider',\n  templateUrl: './dealslider.component.html',\n  styleUrls: ['./dealslider.component.css']\n})\nexport class DealsliderComponent implements OnInit {\n  @Input() item = '';\n  public imagurl  = GlobalConstants.host+\"/img/produit_image\"\n  @Output() newItemEvent = new EventEmitter<string>();\n  constructor(public produitService:ProduitService,private navigate:Router) { }\n  public shopbox: { img: string }[] = shoppost;\n  dealsConfig = {\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    arrows: false,\n    dots: true,\n    dotsClass: \"slick-dots d-flex\",\n    autoplay: true,\n    responsive: [\n      {\n        breakpoint: 991,\n        settings: {\n          slidesToShow: 2,\n        }\n      },\n      {\n        breakpoint: 575,\n        settings: {\n          slidesToShow: 1,\n        }\n      }\n    ]\n  }\n\n  ngOnInit(): void {\n    this.getProductRecent();\n    \n  }\n  public allproductionconso:any[]=[]\n  public  produits: Prodruit;\n\n  // get recente product\n  getProductRecent(){\n    this.produitService.GetAllProduit().subscribe((res : Prodruit)=>{\n    this.produits = res;\n    this.produits.data.forEach(element => {\n       if(element['typeVente'] === this.item){\n\n        if( element.description.toString().includes(\"<=:=>\")){\n          var splitdescription =  element.description.toString().split(\"<=:=>\");\n          element.description = splitdescription[0]\n          element.label = splitdescription[1]\n          console.log(\"itemr :\",splitdescription)\n        }\n        this.allproductionconso.push(element);\n        console.log(\"allproductionconso :\",this.allproductionconso)\n       }\n      });\n    });\n    console.log(\"item____  :\",this.item)\n  }\n  addNewItem(value: string) {\n    this.newItemEvent.emit(value);\n  }\n}\n"]}